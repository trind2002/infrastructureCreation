version: 2.1
# Use a package of configuration called an orb.
orbs:
    # Choose either one of the orbs below
    # welcome: circleci/welcome-orb@0.4.1
    # aws-cli: circleci/aws-cli@2.0.3
  aws-cli: circleci/aws-cli@4.0.0
commands:
  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
# Define the jobs we want to run for this project
jobs:
  myjob1:  # Choose any name, such as `build`
    # The primary container, where your job's commands will run
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout # check out the code in the project directory
      - run: echo "hello world" # run the `echo` command
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      # Fail the job intentionally to simulate an error.
      # Uncomment the line below if you want to fail the current step
      # - run: return 1
      - destroy_environment
  configure_inventory:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Config Inventory Stack
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:Project,Values=udacity" \
              --output text >> inventory.txt
      # Fail the job intentionally to simulate an error.
      # Uncomment the line below if you want to fail the current step
      # - run: return 1

  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["2c:59:b2:64:36:60:62:cf:0f:83:c8:72:53:ad:22:b8"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add --update ansible 
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml
  
# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - myjob1
      - create_infrastructure
      - configure_inventory
          requires:
            - create_infrastructure
      - configure_infrastructure
          requires:
            - configure_inventory